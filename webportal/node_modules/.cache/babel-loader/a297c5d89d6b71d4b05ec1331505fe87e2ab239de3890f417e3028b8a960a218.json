{"ast":null,"code":"var _jsxFileName = \"/Users/abdullahbalbaid/Documents/repos/PlayVu/webportal/src/Fields.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport AddField from \"./components/AddField\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fields = () => {\n  _s();\n  const [fields, setFields] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedField, setSelectedField] = useState(null);\n  const [subfieldName, setSubfieldName] = useState(\"\");\n  const editField = field => {\n    const fieldWithSubfields = {\n      ...field,\n      subfields: field.subfields || []\n    };\n    setSelectedField(fieldWithSubfields);\n    setIsModalOpen(true);\n  };\n  const addSubfield = () => {\n    if (!selectedField) return;\n    const newSubfield = {\n      id: Date.now(),\n      name: subfieldName || \"New Subfield\"\n    };\n    const updatedField = {\n      ...selectedField,\n      subfields: [...selectedField.subfields, newSubfield]\n    };\n    setSelectedField(updatedField);\n    setSubfieldName(\"\");\n  };\n  const removeSubfield = subfieldId => {\n    const updatedSubfields = selectedField.subfields.filter(subfield => subfield.id !== subfieldId);\n    setSelectedField({\n      ...selectedField,\n      subfields: updatedSubfields\n    });\n  };\n  const handleSubfieldNameChange = (subfieldId, value) => {\n    const updatedSubfields = selectedField.subfields.map(subfield => subfield.id === subfieldId ? {\n      ...subfield,\n      name: value\n    } : subfield);\n    setSelectedField({\n      ...selectedField,\n      subfields: updatedSubfields\n    });\n  };\n  const saveField = () => {\n    const updatedFields = fields.map(field => field.id === selectedField.id ? selectedField : field);\n    setFields(updatedFields);\n    setIsModalOpen(false);\n  };\n\n  // Single API call here to add a field\n  // const addFieldToApi = async (field) => {\n  //   try {\n  //     const response = await axios.post(\"http://localhost:8080/api/add-field\", {\n  //       name: field.name,\n  //       description: field.description || \"No description\",\n  //       address: field.streetAddress,\n  //       zip_code: field.zipCode,\n  //       city: field.city,\n  //     });\n  //     if (response.status === 201) {\n  //       setFields([...fields, response.data]);\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Error adding field:\", error);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4 text-green-600\",\n      children: \"Fields Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddField, {\n      onSendField: addFieldToApi // Pass addFieldToApi function directly\n      ,\n      lastId: fields.reduce((prev, curr) => curr.id > prev ? curr.id : prev, 0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), fields.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative overflow-x-auto shadow-md sm:rounded-lg mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full text-sm text-left text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"text-xs text-gray-700 uppercase bg-green-100\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"px-6 py-3\",\n              children: \"Field Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"px-6 py-3\",\n              children: \"Street Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"px-6 py-3\",\n              children: \"Zip Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"px-6 py-3\",\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"px-6 py-3\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: fields.map(field => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-white border-b\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              className: \"px-6 py-4 font-medium text-gray-900 whitespace-nowrap\",\n              children: field.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4\",\n              children: field.streetAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4\",\n              children: field.zipCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4\",\n              children: field.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => editField(field),\n                className: \"font-medium text-green-600 hover:underline\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)]\n          }, field.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Fields, \"UKdqoqJBpVgPk3JJ8DPl6SnxTFQ=\");\n_c = Fields;\nexport default Fields;\nvar _c;\n$RefreshReg$(_c, \"Fields\");","map":{"version":3,"names":["React","useState","AddField","axios","jsxDEV","_jsxDEV","Fields","_s","fields","setFields","isModalOpen","setIsModalOpen","selectedField","setSelectedField","subfieldName","setSubfieldName","editField","field","fieldWithSubfields","subfields","addSubfield","newSubfield","id","Date","now","name","updatedField","removeSubfield","subfieldId","updatedSubfields","filter","subfield","handleSubfieldNameChange","value","map","saveField","updatedFields","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSendField","addFieldToApi","lastId","reduce","prev","curr","length","scope","streetAddress","zipCode","city","onClick","_c","$RefreshReg$"],"sources":["/Users/abdullahbalbaid/Documents/repos/PlayVu/webportal/src/Fields.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport AddField from \"./components/AddField\";\nimport axios from \"axios\";\n\nconst Fields = () => {\n  const [fields, setFields] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedField, setSelectedField] = useState(null);\n  const [subfieldName, setSubfieldName] = useState(\"\");\n\n  const editField = (field) => {\n    const fieldWithSubfields = {\n      ...field,\n      subfields: field.subfields || [],\n    };\n    setSelectedField(fieldWithSubfields);\n    setIsModalOpen(true);\n  };\n\n  const addSubfield = () => {\n    if (!selectedField) return;\n    const newSubfield = {\n      id: Date.now(),\n      name: subfieldName || \"New Subfield\",\n    };\n    const updatedField = {\n      ...selectedField,\n      subfields: [...selectedField.subfields, newSubfield],\n    };\n    setSelectedField(updatedField);\n    setSubfieldName(\"\");\n  };\n\n  const removeSubfield = (subfieldId) => {\n    const updatedSubfields = selectedField.subfields.filter(\n      (subfield) => subfield.id !== subfieldId\n    );\n    setSelectedField({ ...selectedField, subfields: updatedSubfields });\n  };\n\n  const handleSubfieldNameChange = (subfieldId, value) => {\n    const updatedSubfields = selectedField.subfields.map((subfield) =>\n      subfield.id === subfieldId ? { ...subfield, name: value } : subfield\n    );\n    setSelectedField({ ...selectedField, subfields: updatedSubfields });\n  };\n\n  const saveField = () => {\n    const updatedFields = fields.map((field) =>\n      field.id === selectedField.id ? selectedField : field\n    );\n    setFields(updatedFields);\n    setIsModalOpen(false);\n  };\n\n  // Single API call here to add a field\n  // const addFieldToApi = async (field) => {\n  //   try {\n  //     const response = await axios.post(\"http://localhost:8080/api/add-field\", {\n  //       name: field.name,\n  //       description: field.description || \"No description\",\n  //       address: field.streetAddress,\n  //       zip_code: field.zipCode,\n  //       city: field.city,\n  //     });\n  //     if (response.status === 201) {\n  //       setFields([...fields, response.data]);\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Error adding field:\", error);\n  //   }\n  // };\n  \n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-4\">\n      <h1 className=\"text-2xl font-bold mb-4 text-green-600\">Fields Page</h1>\n\n      {/* Add new field using the AddField component */}\n      <AddField\n        onSendField={addFieldToApi} // Pass addFieldToApi function directly\n        lastId={fields.reduce(\n          (prev, curr) => (curr.id > prev ? curr.id : prev),\n          0\n        )}\n      />\n\n      {/* Display fields in a table */}\n      {fields.length > 0 && (\n        <div className=\"relative overflow-x-auto shadow-md sm:rounded-lg mt-4\">\n          <table className=\"w-full text-sm text-left text-gray-500\">\n            <thead className=\"text-xs text-gray-700 uppercase bg-green-100\">\n              <tr>\n                <th scope=\"col\" className=\"px-6 py-3\">\n                  Field Name\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3\">\n                  Street Address\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3\">\n                  Zip Code\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3\">\n                  City\n                </th>\n                <th scope=\"col\" className=\"px-6 py-3\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {fields.map((field) => (\n                <tr key={field.id} className=\"bg-white border-b\">\n                  <th\n                    scope=\"row\"\n                    className=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap\"\n                  >\n                    {field.name}\n                  </th>\n                  <td className=\"px-6 py-4\">{field.streetAddress}</td>\n                  <td className=\"px-6 py-4\">{field.zipCode}</td>\n                  <td className=\"px-6 py-4\">{field.city}</td>\n                  <td className=\"px-6 py-4 text-right\">\n                    <button\n                      onClick={() => editField(field)}\n                      className=\"font-medium text-green-600 hover:underline\"\n                    >\n                      Edit\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Fields;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}